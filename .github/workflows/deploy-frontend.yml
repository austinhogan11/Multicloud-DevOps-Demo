name: Deploy Frontend (S3 + CloudFront)

on:
  # Manual trigger only to avoid duplicate deploys alongside full-stack
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
      S3_BUCKET: ${{ vars.S3_BUCKET }}                       # e.g. taskapi-todo-demo
      CF_DISTRIBUTION_ID: ${{ vars.CF_DISTRIBUTION_ID }}     # e.g. E3RO7BKWI4B10A
      VITE_API_BASE: ${{ vars.VITE_API_BASE || vars.VITE_API_URL }}   # prefer VITE_API_BASE; fallback to old var name

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION || 'us-east-1' }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build
        working-directory: frontend
        run: |
          echo "VITE_API_BASE=${VITE_API_BASE}" > .env
          npm ci
          npm run build

      - name: Sync to S3
        run: |
          aws s3 sync frontend/dist/ "s3://${S3_BUCKET}" --delete
          # Ensure HTML revalidates quickly; assets are fingerprinted and can be long-lived
          aws s3 cp frontend/dist/index.html "s3://${S3_BUCKET}/index.html" \
            --cache-control "max-age=60,public" --content-type "text/html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DISTRIBUTION_ID}" \
            --paths "/*"
